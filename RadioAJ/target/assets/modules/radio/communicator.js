define([],function(){function init(wsConnectedCallback){console.log("This project is still in BETA. You will see all logs here. If you find a bug, drop me a mail [johri.atharva@gmail.com]"),console.log("Communications switching on.."),startupWS(wsConnectedCallback)}function startupWS(wsConnectedCallback){var socket=new SockJS("/stomp");stompClient=Stomp.over(socket),stompClient.connect({},function(){console.log("Connected to server!"),stompClient.subscribe("/topic/hello",function(){console.log("Communications succeeded!"),OpenOpts.Comm.ws=!0,wsConnectedCallback&&"function"==typeof wsConnectedCallback&&wsConnectedCallback()})}),testWSCommunications(wsConnectedCallback)}function testWSCommunications(){console.log("Testing server communication.."),setTimeout(function(){stompClient.send("/app/hello",{},JSON.stringify({test:"message"}))},500)}function makeAJAXRequest(type,url,data,callbacks){$.ajax({type:type,url:url,data:data,success:callbacks&&callbacks.success?callbacks.success:null,error:callbacks&&callbacks.error?callbacks.error:null,complete:callbacks&&callbacks.complete?callbacks.complete:null})}var stompClient,Listen={hear:function(){}},Speak={ask:function(url,data,callbacks){makeAJAXRequest("GET",url,data,callbacks)},tell:function(url,data,callbacks){makeAJAXRequest("POST",url,data,callbacks)}};return{init:init,Listen:Listen,Speak:Speak}});